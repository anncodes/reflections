How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Viewing a diff between two versions has helped me to save time and be 
    more efficient in writing or debugging codes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will make me a more efficient programmer because having easy 
    access to the entire history of a file will help me monitor 
    what and when changes has been made and who made the changes.
    It will also help me recover files easily.

What do you think are the pros and cons of manually choosing when 
to create a commit, like you do in Git, vs having versions 
automatically saved, like Google docs does?

    Pros
    You can keep commits small
    Ability to rationalise when to commit
    Total control over versions

    Cons
    Too many commits for small changes
    Too many unnecessary checkpoints


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    
    
How can you use the commands git log and git diff to view the history of files?

    With commands git log and git diff, we can view how many lines were added and deleted.

How might using version control make you more confident to make changes that
could break something?

    Version control takes away the fear of breaking the code.  Cehcking out previous commits allows you to explore the code and 
    work on areas that needs to be improved.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to use the workspace for my next project.